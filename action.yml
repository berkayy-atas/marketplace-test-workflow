name: 'MyApp Backup Action'
description: 'Repository mirror backup, ZSTD compression, and API upload. Optionally uses org ID.'
branding:
  icon: 'archive'
  color: 'blue'

inputs:
  activation_code:
    description: 'Activation code for API'
    required: true
  encryption_password:
    description: 'Secret key for encrypting the backup (min. 32 chars)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Validate encryption password length
      shell: bash
      run: |
        ENC_KEY="${{ inputs.encryption_password }}"
        if [ "${#ENC_KEY}" -lt 32 ]; then
          echo "::error ::The encryption_password must be at least 32 characters long (got ${#ENC_KEY})."
          exit 1
        fi

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}

    - name: Clone Repository in Mirror Mode
      shell: bash
      run: |
        git clone --mirror . repo-mirror

    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y zstd jq

    - name: Make script executable
      shell: bash
      run: chmod +x "$GITHUB_ACTION_PATH/scripts/backup.sh"

    - name: Run backup & upload script
      shell: bash
      env:
        # Gerekli gizliler / değerler
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}
        ACTIVATION_CODE: ${{ inputs.activation_code }}
        # GitHub context (script için garantiye alalım)
        REPOSITORY_ID: ${{ github.repository_id }}
        REPOSITORY: ${{ github.repository }}
        EVENT_NAME: ${{ github.event_name }}
        REF: ${{ github.ref }}
        ACTOR: ${{ github.actor }}
        REPOSITORY_OWNER: ${{ github.repository_owner }}
      run: "$GITHUB_ACTION_PATH/scripts/backup.sh"

    - name: Print Backup Summary
      shell: bash
      run: |
        UPLOAD_METADATA=""
        if [ -n "${{ env.commit }}" ]; then
          UPLOAD_METADATA=$(cat <<EOF
        --------------------------------------------------
        **Upload Metadata**
        - Commit:      ${{ env.commit }}
        - CommitShort: ${{ env.commitShort }}
        - Parents:     ${{ env.parents }}
        - Author:      ${{ env.author }}
        - Date:        ${{ env.date }}
        - Committer:   ${{ env.committer }}
        - Message:     ${{ env.message }}
        EOF
        )
        fi

        SUMMARY=$(cat <<EOF
        ✅ **Backup completed successfully!**
        --------------------------------------------------
        **Git Metadata**
        Repository: ${{ github.repository }}
        - Owner: ${{ github.repository_owner }} [${{ github.event.repository.owner.type }}]
        - Event: ${{ github.event_name }}
        - Ref:   ${{ github.ref }}
        - Actor: ${{ github.actor }}

        ${UPLOAD_METADATA}
        --------------------------------------------------
        **API Response**
        - File version id: ${{ env.recordId }}
        - You can access the shielded file from this link : https://dev.management.file-security.icredible.com/dashboard/file-management/${{ env.endpointId }}/${{ env.directoryRecordId }}
        EOF
        )

        MESSAGE="${SUMMARY//'%'/'%25'}"
        MESSAGE="${MESSAGE//$'\n'/'%0A'}"
        MESSAGE="${MESSAGE//$'\r'/'%0D'}"

        echo "::notice::$MESSAGE"
